CustomVis = function(_parentElement, _data) {this.parentElement = _parentElement;this.data = _data;this.displayData = this.data;this.initVis();}// Object oriented initializationCustomVis.prototype.initVis = function() {var vis = this;  vis.data.forEach(function (d) {      d.Date = new Date(d.Date);  })// Margin variablevis.margin = { top: 20, right: 0, bottom: 100, left: 80 };// vis.width = $("#" + vis.parentElement).width() - vis.margin.left - vis.margin.right,  vis.width = 750 - vis.margin.left - vis.margin.right,vis.height = 600 - vis.margin.top - vis.margin.bottom;// SVG drawing areavis.svg = d3.select("#" + vis.parentElement).append("svg").attr("width", vis.width + vis.margin.left + vis.margin.right).attr("height", vis.height + vis.margin.top + vis.margin.bottom).append("g").attr("transform", "translate(" + vis.margin.left + "," + vis.margin.top + ")");vis.eventHandler();}// Event handler and data loadCustomVis.prototype.eventHandler = function () {var vis = this;    vis.selectBox = document.getElementById("bar-selector");    vis.selectedValue = vis.selectBox.options[vis.selectBox.selectedIndex].value;    if (vis.selectedValue == "july") {vis.selectedValue = 6;}    else if (vis.selectedValue == "august") { vis.selectedValue = 7;}    else {vis.selectedValue = 8;}    vis.displayData = vis.data.filter(function (d) {      return d.Date.getMonth() == vis.selectedValue;    })    // Set counter variables    vis.uberTotal = 0;    // vis.yellowCabTotal = 0;    vis.greenCabTotal = 0;    vis.prestigeTotal = 0;    vis.americanTotal = 0;    vis.firstClassTotal = 0    // Wrangle variables    vis.displayData.forEach(function (d) {      vis.uberTotal += d.Uber;      vis.greenCabTotal += d["Green Taxis"];      vis.yellowCabTotal += d["Yellow Taxis"];      vis.prestigeTotal += d.Prestige;      vis.americanTotal += d.American;      vis.firstClassTotal += d.Firstclass;    })    vis.metaLables = ["Uber","Green Taxis","Prestige","American","Firstclass"];    vis.metaData = [vis.uberTotal,vis.greenCabTotal,vis.prestigeTotal,vis.americanTotal,vis.firstClassTotal];    vis.metaObjects = [];    for(var i=0;i < vis.metaData.length;i++) {var obj = new Object();      obj.Label = vis.metaLables[i];      obj.Data = vis.metaData[i];      vis.metaObjects.push(obj);    }    vis.metaObjects.sort(function (a,b) {      return b.Data-a.Data;    })    vis.updateVis();};/* *  The drawing function */// function to update visualization based off of dynamic dataCustomVis.prototype.updateVis = function() {var vis = this;  // start scales  vis.x = d3.scale.linear()    .domain([0, 1460219])    .range([0, vis.width - 30]);  vis.y = d3.scale.linear()    .domain([0, 5])    .range([0,vis.height]);  vis.xAxis = d3.svg.axis()    .orient("bottom")    .scale(vis.x);  vis.yAxis = d3.svg.axis()    .orient("left")    .scale(vis.y)    .tickFormat("")    .tickSize(0);  vis.yAxisGroup = vis.svg.append("g")    .attr("transform", "translate(15,0)")    .attr("class","axis")    .attr("id", "yaxis")    .call(vis.yAxis);  vis.xAxisGroup = vis.svg.append("g")    .attr("transform", "translate(15,"+(vis.height)+")")    .attr("class","axis")    .attr("id", "xaxis")    .call(vis.xAxis);  vis.svg.append("text")    .attr("text-anchor", "middle")    .attr("transform", "translate("+ (vis.width/2) +","+(vis.height-(vis.margin.bottom - 150))+")")    .text("Total Number of Rides Per Month");  // bar chart enter, exit, update pattern  vis.barGraph = vis.svg.selectAll("rect")    .data(vis.metaObjects);  vis.barGraph.exit().remove();  vis.barGraph.enter()    .append("rect")    .attr("x", 15.5)    .attr("fill",function (d) {      if (d.Label == "Green Taxis") {return "#4575B4";}      else if (d.Label =="Uber") {return "#ABD9E9";}      else if (d.Label =="Prestige") {return "#FFFFBF";}      else if (d.Label =="Firstclass") {return "#F46D43";}      else {return "#D73027";}    })    .attr("height", 30);  vis.barGraph    .transition()    .duration(200)    .attr("y", function(d,i){      return vis.y(i);    })    .attr("width",0);  // creating chart labels  vis.chartLabels = vis.svg.selectAll("label.text")    .data(vis.metaObjects);  // vis.chartLabels.exit().remove();  vis.chartLabels.enter()    .append("text")    .attr("text-anchor","end")    .attr("x", "0")    .attr("class","label")    .attr("fill","black")    .text(function (d) {      return d.Label;    });    // .text("hello");  vis.chartLabels    .attr("y", function(d,i){      return vis.y(i)+18;    });  // svg images  vis.image = vis.svg.selectAll("image")    .data(vis.metaObjects)  vis.image.exit().remove();  vis.image.enter()    .append("image")    .attr("fill","yellow")    .attr("height", "50px")    .attr("width", "50px")    .attr("xlink:href", "images/taxi.svg")  vis.image    .transition()    .duration(200)    .attr("x",15)    .attr("y", function(d,i){      return vis.y(i)-10;    });  var updater = setTimeout(update, 500);  // updater function based of select box  function update() {    vis.image      .transition()      .duration(700)      .attr("y", function(d,i){        return vis.y(i)-10;      })      .attr("x", function(d){        return vis.x(d.Data) + 17;      });    vis.tip = d3.tip()      .attr('class', 'd3-tip')      .offset([-10, 0])      .html(function(d) {        return "<p>Rides: " + d.Data.toLocaleString() + "</p>";    });    vis.svg.call(vis.tip);      vis.barGraph        .transition()        .duration(700)        .attr("width", function(d){          console.log(d.Data);          return vis.x(d.Data);        });    vis.barGraph      .on("mouseover", vis.tip.show)      .on("mouseout", vis.tip.hide);  }}